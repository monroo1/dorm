name: linting, testing, building
on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
permissions:
    contents: write
    pages: write
    id-token: write
concurrency:
    group: "pages"
    cancel-in-progress: true
jobs:
    build-and-ui-testing:
        runs-on: ubuntu-latest
        concurrency: ci-${{ github.ref }}
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        strategy:
            matrix:
                node-version: [18.x]
        steps:
            - uses: actions/checkout@v2
            - name: Staring Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: install modules
              run: npm i
            - name: build production project
              run: npm run build:prod
              if: always()
            - name: unit testing
              if: always()
              run: npm run test:unit
            - name: Setup Pages
              uses: actions/configure-pages@v2
              if: always()
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v1
              if: always()
              with:
                  path: "reports"
            - name: Deploy to GitHub Pages
              id: deployment
              if: always()
              uses: actions/deploy-pages@v1

    checks:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.x]
        steps:
            - uses: actions/checkout@v2
            - name: Staring Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: install modules
              run: npm i
            - name: linting typescript
              run: npm run lint:ts
              if: always()
            - name: linting css
              run: npm run lint:scss

    chromatic-deployment:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Install dependencies
              run: npm i
            - name: Publish to Chromatic
              uses: chromaui/action@v1
              with:
                  projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
                  exitZeroOnChanges: true
